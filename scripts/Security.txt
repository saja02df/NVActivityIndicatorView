Mobile security


Static Analysis:
	
Source Code analysis for vulnerabilities
- Scan source code for dependencies - This is language dependant - Swift, Java, ObjC and Kotlin
Can use open source analysers here like - MOBSF, Sonar Qube, Swift Lint etc
- SSL bypass check
- Weak crypto  check
- Hardcoded keys/secrets check
- Improper usage of dangerous APIs
- SQL Injections	
- Android - Remote web view debuggin

Binary Analysis(IPA, APK):
- Validate binary signing - No tamping of binary post creation
- App Transport Security - Damian name whitelisting validations	in info.plist
- Hardcoded keys/secrets check in code or app bundle - Use reverse engineering tools like Hooper (for iOS ) to disassemble the code.

Dynamic Analysis:
- Need to use open source tool to analyse network traffic and analyse vulnerabilities like Open Web Application Security Project (OWASP)
- Ensure SSL
- Ensure Certificate pinning 
- Block Rooted/Jail broken device	
- Analyse application dumps, logs, error or crash reports for vulnerabilities
- Note: The open source supports only Android at the moment and not iOS	which is not very straight forward to support

Reporting:
- UI implementation




Reference:
https://github.com/torque59/YSO-Mobile-Security-Framework/blob/master/README.md
https://secdevops.ai/ios-static-analysis-and-recon-c611eaa6d108
https://www.hopperapp.com/

Below is a very good link on iOS reverse engineering and other security vulnerabilities:
https://web.securityinnovation.com/hubfs/iOS%20Hacking%20Guide.pdf
https://medium.com/@ansjdnakjdnajkd/dynamic-analysis-of-ios-apps-wo-jailbreak-1481ab3020d8

The static analyzer is able to perform automated code review, detect insecure permissions and configurations, and detect insecure code like ssl overriding, ssl bypass, weak crypto, obfuscated codes, improper permissions, hardcoded secrets, improper usage of dangerous APIs, leakage of sensitive/PII information, and insecure file storage. The dynamic analyzer runs the application in a VM or on a configured device and detects the issues at run time. Further analysis is done on the captured network packets, decrypted HTTPS traffic, application dumps, logs, error or crash reports, debug information, stack trace, and on the application assets like setting files, preferences, and databases. This framework is highly scalable that you can add your custom rules with ease. A quick and clean report can be generated at the end of the tests. We will be extending this framework to support other mobile platforms like Tizen, WindowsPhone etc. in future		


Open source static analyser:
https://www.owasp.org/index.php/Source_Code_Analysis_Tools
https://github.com/mre/awesome-static-analysis
